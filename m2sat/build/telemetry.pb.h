// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: telemetry.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_telemetry_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_telemetry_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019006 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_telemetry_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_telemetry_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_telemetry_2eproto;
class TelemetryMessage;
struct TelemetryMessageDefaultTypeInternal;
extern TelemetryMessageDefaultTypeInternal _TelemetryMessage_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::TelemetryMessage* Arena::CreateMaybeMessage<::TelemetryMessage>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class TelemetryMessage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TelemetryMessage) */ {
 public:
  inline TelemetryMessage() : TelemetryMessage(nullptr) {}
  ~TelemetryMessage() override;
  explicit constexpr TelemetryMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TelemetryMessage(const TelemetryMessage& from);
  TelemetryMessage(TelemetryMessage&& from) noexcept
    : TelemetryMessage() {
    *this = ::std::move(from);
  }

  inline TelemetryMessage& operator=(const TelemetryMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TelemetryMessage& operator=(TelemetryMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TelemetryMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TelemetryMessage* internal_default_instance() {
    return reinterpret_cast<const TelemetryMessage*>(
               &_TelemetryMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(TelemetryMessage& a, TelemetryMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(TelemetryMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TelemetryMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TelemetryMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TelemetryMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const TelemetryMessage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const TelemetryMessage& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TelemetryMessage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TelemetryMessage";
  }
  protected:
  explicit TelemetryMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOmegaB2IFieldNumber = 2,
    kQI2BFieldNumber = 3,
    kQI2DFieldNumber = 4,
    kRMassFieldNumber = 5,
    kRdotMassFieldNumber = 6,
    kRMassCommandedFieldNumber = 7,
    kUComFieldNumber = 8,
    kUActualFieldNumber = 9,
    kNuTopFieldNumber = 10,
    kNuBottomFieldNumber = 11,
    kThetaHatFieldNumber = 12,
    kOmegaD2IDFieldNumber = 13,
    kTimeFieldNumber = 1,
  };
  // repeated double omega_b2i = 2 [packed = true];
  int omega_b2i_size() const;
  private:
  int _internal_omega_b2i_size() const;
  public:
  void clear_omega_b2i();
  private:
  double _internal_omega_b2i(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_omega_b2i() const;
  void _internal_add_omega_b2i(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_omega_b2i();
  public:
  double omega_b2i(int index) const;
  void set_omega_b2i(int index, double value);
  void add_omega_b2i(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      omega_b2i() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_omega_b2i();

  // repeated double q_i2b = 3 [packed = true];
  int q_i2b_size() const;
  private:
  int _internal_q_i2b_size() const;
  public:
  void clear_q_i2b();
  private:
  double _internal_q_i2b(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_q_i2b() const;
  void _internal_add_q_i2b(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_q_i2b();
  public:
  double q_i2b(int index) const;
  void set_q_i2b(int index, double value);
  void add_q_i2b(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      q_i2b() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_q_i2b();

  // repeated double q_i2d = 4 [packed = true];
  int q_i2d_size() const;
  private:
  int _internal_q_i2d_size() const;
  public:
  void clear_q_i2d();
  private:
  double _internal_q_i2d(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_q_i2d() const;
  void _internal_add_q_i2d(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_q_i2d();
  public:
  double q_i2d(int index) const;
  void set_q_i2d(int index, double value);
  void add_q_i2d(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      q_i2d() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_q_i2d();

  // repeated double r_mass = 5 [packed = true];
  int r_mass_size() const;
  private:
  int _internal_r_mass_size() const;
  public:
  void clear_r_mass();
  private:
  double _internal_r_mass(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_r_mass() const;
  void _internal_add_r_mass(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_r_mass();
  public:
  double r_mass(int index) const;
  void set_r_mass(int index, double value);
  void add_r_mass(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      r_mass() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_r_mass();

  // repeated double rdot_mass = 6 [packed = true];
  int rdot_mass_size() const;
  private:
  int _internal_rdot_mass_size() const;
  public:
  void clear_rdot_mass();
  private:
  double _internal_rdot_mass(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_rdot_mass() const;
  void _internal_add_rdot_mass(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_rdot_mass();
  public:
  double rdot_mass(int index) const;
  void set_rdot_mass(int index, double value);
  void add_rdot_mass(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      rdot_mass() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_rdot_mass();

  // repeated double r_mass_commanded = 7 [packed = true];
  int r_mass_commanded_size() const;
  private:
  int _internal_r_mass_commanded_size() const;
  public:
  void clear_r_mass_commanded();
  private:
  double _internal_r_mass_commanded(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_r_mass_commanded() const;
  void _internal_add_r_mass_commanded(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_r_mass_commanded();
  public:
  double r_mass_commanded(int index) const;
  void set_r_mass_commanded(int index, double value);
  void add_r_mass_commanded(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      r_mass_commanded() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_r_mass_commanded();

  // repeated double u_com = 8 [packed = true];
  int u_com_size() const;
  private:
  int _internal_u_com_size() const;
  public:
  void clear_u_com();
  private:
  double _internal_u_com(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_u_com() const;
  void _internal_add_u_com(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_u_com();
  public:
  double u_com(int index) const;
  void set_u_com(int index, double value);
  void add_u_com(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      u_com() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_u_com();

  // repeated double u_actual = 9 [packed = true];
  int u_actual_size() const;
  private:
  int _internal_u_actual_size() const;
  public:
  void clear_u_actual();
  private:
  double _internal_u_actual(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_u_actual() const;
  void _internal_add_u_actual(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_u_actual();
  public:
  double u_actual(int index) const;
  void set_u_actual(int index, double value);
  void add_u_actual(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      u_actual() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_u_actual();

  // repeated double nu_top = 10 [packed = true];
  int nu_top_size() const;
  private:
  int _internal_nu_top_size() const;
  public:
  void clear_nu_top();
  private:
  double _internal_nu_top(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_nu_top() const;
  void _internal_add_nu_top(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_nu_top();
  public:
  double nu_top(int index) const;
  void set_nu_top(int index, double value);
  void add_nu_top(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      nu_top() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_nu_top();

  // repeated double nu_bottom = 11 [packed = true];
  int nu_bottom_size() const;
  private:
  int _internal_nu_bottom_size() const;
  public:
  void clear_nu_bottom();
  private:
  double _internal_nu_bottom(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_nu_bottom() const;
  void _internal_add_nu_bottom(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_nu_bottom();
  public:
  double nu_bottom(int index) const;
  void set_nu_bottom(int index, double value);
  void add_nu_bottom(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      nu_bottom() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_nu_bottom();

  // repeated double theta_hat = 12 [packed = true];
  int theta_hat_size() const;
  private:
  int _internal_theta_hat_size() const;
  public:
  void clear_theta_hat();
  private:
  double _internal_theta_hat(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_theta_hat() const;
  void _internal_add_theta_hat(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_theta_hat();
  public:
  double theta_hat(int index) const;
  void set_theta_hat(int index, double value);
  void add_theta_hat(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      theta_hat() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_theta_hat();

  // repeated double omega_d2i_D = 13 [packed = true];
  int omega_d2i_d_size() const;
  private:
  int _internal_omega_d2i_d_size() const;
  public:
  void clear_omega_d2i_d();
  private:
  double _internal_omega_d2i_d(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_omega_d2i_d() const;
  void _internal_add_omega_d2i_d(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_omega_d2i_d();
  public:
  double omega_d2i_d(int index) const;
  void set_omega_d2i_d(int index, double value);
  void add_omega_d2i_d(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      omega_d2i_d() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_omega_d2i_d();

  // uint64 time = 1;
  void clear_time();
  uint64_t time() const;
  void set_time(uint64_t value);
  private:
  uint64_t _internal_time() const;
  void _internal_set_time(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:TelemetryMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
<<<<<<< Updated upstream
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > omega_b2i_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > q_i2b_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > q_i2d_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > r_mass_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > rdot_mass_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > r_mass_commanded_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > u_com_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > u_actual_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > nu_top_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > nu_bottom_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > theta_hat_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > omega_d2i_d_;
    uint64_t time_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
=======
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > omega_b2i_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > q_b2i_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > q_i2d_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > r_mass_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > rdot_mass_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > r_mass_commanded_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > u_com_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > u_actual_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > nu_top_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > nu_bottom_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > theta_hat_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > omega_d2i_d_;
  uint64_t time_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
>>>>>>> Stashed changes
  friend struct ::TableStruct_telemetry_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TelemetryMessage

// uint64 time = 1;
inline void TelemetryMessage::clear_time() {
  time_ = uint64_t{0u};
}
inline uint64_t TelemetryMessage::_internal_time() const {
  return time_;
}
inline uint64_t TelemetryMessage::time() const {
  // @@protoc_insertion_point(field_get:TelemetryMessage.time)
  return _internal_time();
}
inline void TelemetryMessage::_internal_set_time(uint64_t value) {
  
  time_ = value;
}
inline void TelemetryMessage::set_time(uint64_t value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:TelemetryMessage.time)
}

// repeated double omega_b2i = 2 [packed = true];
inline int TelemetryMessage::_internal_omega_b2i_size() const {
  return omega_b2i_.size();
}
inline int TelemetryMessage::omega_b2i_size() const {
  return _internal_omega_b2i_size();
}
inline void TelemetryMessage::clear_omega_b2i() {
  omega_b2i_.Clear();
}
inline double TelemetryMessage::_internal_omega_b2i(int index) const {
  return omega_b2i_.Get(index);
}
inline double TelemetryMessage::omega_b2i(int index) const {
  // @@protoc_insertion_point(field_get:TelemetryMessage.omega_b2i)
  return _internal_omega_b2i(index);
}
inline void TelemetryMessage::set_omega_b2i(int index, double value) {
  omega_b2i_.Set(index, value);
  // @@protoc_insertion_point(field_set:TelemetryMessage.omega_b2i)
}
inline void TelemetryMessage::_internal_add_omega_b2i(double value) {
  omega_b2i_.Add(value);
}
inline void TelemetryMessage::add_omega_b2i(double value) {
  _internal_add_omega_b2i(value);
  // @@protoc_insertion_point(field_add:TelemetryMessage.omega_b2i)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TelemetryMessage::_internal_omega_b2i() const {
  return omega_b2i_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TelemetryMessage::omega_b2i() const {
  // @@protoc_insertion_point(field_list:TelemetryMessage.omega_b2i)
  return _internal_omega_b2i();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TelemetryMessage::_internal_mutable_omega_b2i() {
  return &omega_b2i_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TelemetryMessage::mutable_omega_b2i() {
  // @@protoc_insertion_point(field_mutable_list:TelemetryMessage.omega_b2i)
  return _internal_mutable_omega_b2i();
}

<<<<<<< Updated upstream
// repeated double q_i2b = 3 [packed = true];
inline int TelemetryMessage::_internal_q_i2b_size() const {
  return _impl_.q_i2b_.size();
=======
// repeated double q_b2i = 3 [packed = true];
inline int TelemetryMessage::_internal_q_b2i_size() const {
  return q_b2i_.size();
>>>>>>> Stashed changes
}
inline int TelemetryMessage::q_i2b_size() const {
  return _internal_q_i2b_size();
}
<<<<<<< Updated upstream
inline void TelemetryMessage::clear_q_i2b() {
  _impl_.q_i2b_.Clear();
}
inline double TelemetryMessage::_internal_q_i2b(int index) const {
  return _impl_.q_i2b_.Get(index);
=======
inline void TelemetryMessage::clear_q_b2i() {
  q_b2i_.Clear();
}
inline double TelemetryMessage::_internal_q_b2i(int index) const {
  return q_b2i_.Get(index);
>>>>>>> Stashed changes
}
inline double TelemetryMessage::q_i2b(int index) const {
  // @@protoc_insertion_point(field_get:TelemetryMessage.q_i2b)
  return _internal_q_i2b(index);
}
<<<<<<< Updated upstream
inline void TelemetryMessage::set_q_i2b(int index, double value) {
  _impl_.q_i2b_.Set(index, value);
  // @@protoc_insertion_point(field_set:TelemetryMessage.q_i2b)
}
inline void TelemetryMessage::_internal_add_q_i2b(double value) {
  _impl_.q_i2b_.Add(value);
=======
inline void TelemetryMessage::set_q_b2i(int index, double value) {
  q_b2i_.Set(index, value);
  // @@protoc_insertion_point(field_set:TelemetryMessage.q_b2i)
}
inline void TelemetryMessage::_internal_add_q_b2i(double value) {
  q_b2i_.Add(value);
>>>>>>> Stashed changes
}
inline void TelemetryMessage::add_q_i2b(double value) {
  _internal_add_q_i2b(value);
  // @@protoc_insertion_point(field_add:TelemetryMessage.q_i2b)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
<<<<<<< Updated upstream
TelemetryMessage::_internal_q_i2b() const {
  return _impl_.q_i2b_;
=======
TelemetryMessage::_internal_q_b2i() const {
  return q_b2i_;
>>>>>>> Stashed changes
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TelemetryMessage::q_i2b() const {
  // @@protoc_insertion_point(field_list:TelemetryMessage.q_i2b)
  return _internal_q_i2b();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
<<<<<<< Updated upstream
TelemetryMessage::_internal_mutable_q_i2b() {
  return &_impl_.q_i2b_;
=======
TelemetryMessage::_internal_mutable_q_b2i() {
  return &q_b2i_;
>>>>>>> Stashed changes
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TelemetryMessage::mutable_q_i2b() {
  // @@protoc_insertion_point(field_mutable_list:TelemetryMessage.q_i2b)
  return _internal_mutable_q_i2b();
}

// repeated double q_i2d = 4 [packed = true];
inline int TelemetryMessage::_internal_q_i2d_size() const {
  return q_i2d_.size();
}
inline int TelemetryMessage::q_i2d_size() const {
  return _internal_q_i2d_size();
}
inline void TelemetryMessage::clear_q_i2d() {
  q_i2d_.Clear();
}
inline double TelemetryMessage::_internal_q_i2d(int index) const {
  return q_i2d_.Get(index);
}
inline double TelemetryMessage::q_i2d(int index) const {
  // @@protoc_insertion_point(field_get:TelemetryMessage.q_i2d)
  return _internal_q_i2d(index);
}
inline void TelemetryMessage::set_q_i2d(int index, double value) {
  q_i2d_.Set(index, value);
  // @@protoc_insertion_point(field_set:TelemetryMessage.q_i2d)
}
inline void TelemetryMessage::_internal_add_q_i2d(double value) {
  q_i2d_.Add(value);
}
inline void TelemetryMessage::add_q_i2d(double value) {
  _internal_add_q_i2d(value);
  // @@protoc_insertion_point(field_add:TelemetryMessage.q_i2d)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TelemetryMessage::_internal_q_i2d() const {
  return q_i2d_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TelemetryMessage::q_i2d() const {
  // @@protoc_insertion_point(field_list:TelemetryMessage.q_i2d)
  return _internal_q_i2d();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TelemetryMessage::_internal_mutable_q_i2d() {
  return &q_i2d_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TelemetryMessage::mutable_q_i2d() {
  // @@protoc_insertion_point(field_mutable_list:TelemetryMessage.q_i2d)
  return _internal_mutable_q_i2d();
}

// repeated double r_mass = 5 [packed = true];
inline int TelemetryMessage::_internal_r_mass_size() const {
  return r_mass_.size();
}
inline int TelemetryMessage::r_mass_size() const {
  return _internal_r_mass_size();
}
inline void TelemetryMessage::clear_r_mass() {
  r_mass_.Clear();
}
inline double TelemetryMessage::_internal_r_mass(int index) const {
  return r_mass_.Get(index);
}
inline double TelemetryMessage::r_mass(int index) const {
  // @@protoc_insertion_point(field_get:TelemetryMessage.r_mass)
  return _internal_r_mass(index);
}
inline void TelemetryMessage::set_r_mass(int index, double value) {
  r_mass_.Set(index, value);
  // @@protoc_insertion_point(field_set:TelemetryMessage.r_mass)
}
inline void TelemetryMessage::_internal_add_r_mass(double value) {
  r_mass_.Add(value);
}
inline void TelemetryMessage::add_r_mass(double value) {
  _internal_add_r_mass(value);
  // @@protoc_insertion_point(field_add:TelemetryMessage.r_mass)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TelemetryMessage::_internal_r_mass() const {
  return r_mass_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TelemetryMessage::r_mass() const {
  // @@protoc_insertion_point(field_list:TelemetryMessage.r_mass)
  return _internal_r_mass();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TelemetryMessage::_internal_mutable_r_mass() {
  return &r_mass_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TelemetryMessage::mutable_r_mass() {
  // @@protoc_insertion_point(field_mutable_list:TelemetryMessage.r_mass)
  return _internal_mutable_r_mass();
}

// repeated double rdot_mass = 6 [packed = true];
inline int TelemetryMessage::_internal_rdot_mass_size() const {
  return rdot_mass_.size();
}
inline int TelemetryMessage::rdot_mass_size() const {
  return _internal_rdot_mass_size();
}
inline void TelemetryMessage::clear_rdot_mass() {
  rdot_mass_.Clear();
}
inline double TelemetryMessage::_internal_rdot_mass(int index) const {
  return rdot_mass_.Get(index);
}
inline double TelemetryMessage::rdot_mass(int index) const {
  // @@protoc_insertion_point(field_get:TelemetryMessage.rdot_mass)
  return _internal_rdot_mass(index);
}
inline void TelemetryMessage::set_rdot_mass(int index, double value) {
  rdot_mass_.Set(index, value);
  // @@protoc_insertion_point(field_set:TelemetryMessage.rdot_mass)
}
inline void TelemetryMessage::_internal_add_rdot_mass(double value) {
  rdot_mass_.Add(value);
}
inline void TelemetryMessage::add_rdot_mass(double value) {
  _internal_add_rdot_mass(value);
  // @@protoc_insertion_point(field_add:TelemetryMessage.rdot_mass)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TelemetryMessage::_internal_rdot_mass() const {
  return rdot_mass_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TelemetryMessage::rdot_mass() const {
  // @@protoc_insertion_point(field_list:TelemetryMessage.rdot_mass)
  return _internal_rdot_mass();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TelemetryMessage::_internal_mutable_rdot_mass() {
  return &rdot_mass_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TelemetryMessage::mutable_rdot_mass() {
  // @@protoc_insertion_point(field_mutable_list:TelemetryMessage.rdot_mass)
  return _internal_mutable_rdot_mass();
}

// repeated double r_mass_commanded = 7 [packed = true];
inline int TelemetryMessage::_internal_r_mass_commanded_size() const {
  return r_mass_commanded_.size();
}
inline int TelemetryMessage::r_mass_commanded_size() const {
  return _internal_r_mass_commanded_size();
}
inline void TelemetryMessage::clear_r_mass_commanded() {
  r_mass_commanded_.Clear();
}
inline double TelemetryMessage::_internal_r_mass_commanded(int index) const {
  return r_mass_commanded_.Get(index);
}
inline double TelemetryMessage::r_mass_commanded(int index) const {
  // @@protoc_insertion_point(field_get:TelemetryMessage.r_mass_commanded)
  return _internal_r_mass_commanded(index);
}
inline void TelemetryMessage::set_r_mass_commanded(int index, double value) {
  r_mass_commanded_.Set(index, value);
  // @@protoc_insertion_point(field_set:TelemetryMessage.r_mass_commanded)
}
inline void TelemetryMessage::_internal_add_r_mass_commanded(double value) {
  r_mass_commanded_.Add(value);
}
inline void TelemetryMessage::add_r_mass_commanded(double value) {
  _internal_add_r_mass_commanded(value);
  // @@protoc_insertion_point(field_add:TelemetryMessage.r_mass_commanded)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TelemetryMessage::_internal_r_mass_commanded() const {
  return r_mass_commanded_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TelemetryMessage::r_mass_commanded() const {
  // @@protoc_insertion_point(field_list:TelemetryMessage.r_mass_commanded)
  return _internal_r_mass_commanded();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TelemetryMessage::_internal_mutable_r_mass_commanded() {
  return &r_mass_commanded_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TelemetryMessage::mutable_r_mass_commanded() {
  // @@protoc_insertion_point(field_mutable_list:TelemetryMessage.r_mass_commanded)
  return _internal_mutable_r_mass_commanded();
}

// repeated double u_com = 8 [packed = true];
inline int TelemetryMessage::_internal_u_com_size() const {
  return u_com_.size();
}
inline int TelemetryMessage::u_com_size() const {
  return _internal_u_com_size();
}
inline void TelemetryMessage::clear_u_com() {
  u_com_.Clear();
}
inline double TelemetryMessage::_internal_u_com(int index) const {
  return u_com_.Get(index);
}
inline double TelemetryMessage::u_com(int index) const {
  // @@protoc_insertion_point(field_get:TelemetryMessage.u_com)
  return _internal_u_com(index);
}
inline void TelemetryMessage::set_u_com(int index, double value) {
  u_com_.Set(index, value);
  // @@protoc_insertion_point(field_set:TelemetryMessage.u_com)
}
inline void TelemetryMessage::_internal_add_u_com(double value) {
  u_com_.Add(value);
}
inline void TelemetryMessage::add_u_com(double value) {
  _internal_add_u_com(value);
  // @@protoc_insertion_point(field_add:TelemetryMessage.u_com)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TelemetryMessage::_internal_u_com() const {
  return u_com_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TelemetryMessage::u_com() const {
  // @@protoc_insertion_point(field_list:TelemetryMessage.u_com)
  return _internal_u_com();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TelemetryMessage::_internal_mutable_u_com() {
  return &u_com_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TelemetryMessage::mutable_u_com() {
  // @@protoc_insertion_point(field_mutable_list:TelemetryMessage.u_com)
  return _internal_mutable_u_com();
}

// repeated double u_actual = 9 [packed = true];
inline int TelemetryMessage::_internal_u_actual_size() const {
  return u_actual_.size();
}
inline int TelemetryMessage::u_actual_size() const {
  return _internal_u_actual_size();
}
inline void TelemetryMessage::clear_u_actual() {
  u_actual_.Clear();
}
inline double TelemetryMessage::_internal_u_actual(int index) const {
  return u_actual_.Get(index);
}
inline double TelemetryMessage::u_actual(int index) const {
  // @@protoc_insertion_point(field_get:TelemetryMessage.u_actual)
  return _internal_u_actual(index);
}
inline void TelemetryMessage::set_u_actual(int index, double value) {
  u_actual_.Set(index, value);
  // @@protoc_insertion_point(field_set:TelemetryMessage.u_actual)
}
inline void TelemetryMessage::_internal_add_u_actual(double value) {
  u_actual_.Add(value);
}
inline void TelemetryMessage::add_u_actual(double value) {
  _internal_add_u_actual(value);
  // @@protoc_insertion_point(field_add:TelemetryMessage.u_actual)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TelemetryMessage::_internal_u_actual() const {
  return u_actual_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TelemetryMessage::u_actual() const {
  // @@protoc_insertion_point(field_list:TelemetryMessage.u_actual)
  return _internal_u_actual();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TelemetryMessage::_internal_mutable_u_actual() {
  return &u_actual_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TelemetryMessage::mutable_u_actual() {
  // @@protoc_insertion_point(field_mutable_list:TelemetryMessage.u_actual)
  return _internal_mutable_u_actual();
}

// repeated double nu_top = 10 [packed = true];
inline int TelemetryMessage::_internal_nu_top_size() const {
  return nu_top_.size();
}
inline int TelemetryMessage::nu_top_size() const {
  return _internal_nu_top_size();
}
inline void TelemetryMessage::clear_nu_top() {
  nu_top_.Clear();
}
inline double TelemetryMessage::_internal_nu_top(int index) const {
  return nu_top_.Get(index);
}
inline double TelemetryMessage::nu_top(int index) const {
  // @@protoc_insertion_point(field_get:TelemetryMessage.nu_top)
  return _internal_nu_top(index);
}
inline void TelemetryMessage::set_nu_top(int index, double value) {
  nu_top_.Set(index, value);
  // @@protoc_insertion_point(field_set:TelemetryMessage.nu_top)
}
inline void TelemetryMessage::_internal_add_nu_top(double value) {
  nu_top_.Add(value);
}
inline void TelemetryMessage::add_nu_top(double value) {
  _internal_add_nu_top(value);
  // @@protoc_insertion_point(field_add:TelemetryMessage.nu_top)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TelemetryMessage::_internal_nu_top() const {
  return nu_top_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TelemetryMessage::nu_top() const {
  // @@protoc_insertion_point(field_list:TelemetryMessage.nu_top)
  return _internal_nu_top();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TelemetryMessage::_internal_mutable_nu_top() {
  return &nu_top_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TelemetryMessage::mutable_nu_top() {
  // @@protoc_insertion_point(field_mutable_list:TelemetryMessage.nu_top)
  return _internal_mutable_nu_top();
}

// repeated double nu_bottom = 11 [packed = true];
inline int TelemetryMessage::_internal_nu_bottom_size() const {
  return nu_bottom_.size();
}
inline int TelemetryMessage::nu_bottom_size() const {
  return _internal_nu_bottom_size();
}
inline void TelemetryMessage::clear_nu_bottom() {
  nu_bottom_.Clear();
}
inline double TelemetryMessage::_internal_nu_bottom(int index) const {
  return nu_bottom_.Get(index);
}
inline double TelemetryMessage::nu_bottom(int index) const {
  // @@protoc_insertion_point(field_get:TelemetryMessage.nu_bottom)
  return _internal_nu_bottom(index);
}
inline void TelemetryMessage::set_nu_bottom(int index, double value) {
  nu_bottom_.Set(index, value);
  // @@protoc_insertion_point(field_set:TelemetryMessage.nu_bottom)
}
inline void TelemetryMessage::_internal_add_nu_bottom(double value) {
  nu_bottom_.Add(value);
}
inline void TelemetryMessage::add_nu_bottom(double value) {
  _internal_add_nu_bottom(value);
  // @@protoc_insertion_point(field_add:TelemetryMessage.nu_bottom)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TelemetryMessage::_internal_nu_bottom() const {
  return nu_bottom_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TelemetryMessage::nu_bottom() const {
  // @@protoc_insertion_point(field_list:TelemetryMessage.nu_bottom)
  return _internal_nu_bottom();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TelemetryMessage::_internal_mutable_nu_bottom() {
  return &nu_bottom_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TelemetryMessage::mutable_nu_bottom() {
  // @@protoc_insertion_point(field_mutable_list:TelemetryMessage.nu_bottom)
  return _internal_mutable_nu_bottom();
}

// repeated double theta_hat = 12 [packed = true];
inline int TelemetryMessage::_internal_theta_hat_size() const {
  return theta_hat_.size();
}
inline int TelemetryMessage::theta_hat_size() const {
  return _internal_theta_hat_size();
}
inline void TelemetryMessage::clear_theta_hat() {
  theta_hat_.Clear();
}
inline double TelemetryMessage::_internal_theta_hat(int index) const {
  return theta_hat_.Get(index);
}
inline double TelemetryMessage::theta_hat(int index) const {
  // @@protoc_insertion_point(field_get:TelemetryMessage.theta_hat)
  return _internal_theta_hat(index);
}
inline void TelemetryMessage::set_theta_hat(int index, double value) {
  theta_hat_.Set(index, value);
  // @@protoc_insertion_point(field_set:TelemetryMessage.theta_hat)
}
inline void TelemetryMessage::_internal_add_theta_hat(double value) {
  theta_hat_.Add(value);
}
inline void TelemetryMessage::add_theta_hat(double value) {
  _internal_add_theta_hat(value);
  // @@protoc_insertion_point(field_add:TelemetryMessage.theta_hat)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TelemetryMessage::_internal_theta_hat() const {
  return theta_hat_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TelemetryMessage::theta_hat() const {
  // @@protoc_insertion_point(field_list:TelemetryMessage.theta_hat)
  return _internal_theta_hat();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TelemetryMessage::_internal_mutable_theta_hat() {
  return &theta_hat_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TelemetryMessage::mutable_theta_hat() {
  // @@protoc_insertion_point(field_mutable_list:TelemetryMessage.theta_hat)
  return _internal_mutable_theta_hat();
}

// repeated double omega_d2i_D = 13 [packed = true];
inline int TelemetryMessage::_internal_omega_d2i_d_size() const {
  return omega_d2i_d_.size();
}
inline int TelemetryMessage::omega_d2i_d_size() const {
  return _internal_omega_d2i_d_size();
}
inline void TelemetryMessage::clear_omega_d2i_d() {
  omega_d2i_d_.Clear();
}
inline double TelemetryMessage::_internal_omega_d2i_d(int index) const {
  return omega_d2i_d_.Get(index);
}
inline double TelemetryMessage::omega_d2i_d(int index) const {
  // @@protoc_insertion_point(field_get:TelemetryMessage.omega_d2i_D)
  return _internal_omega_d2i_d(index);
}
inline void TelemetryMessage::set_omega_d2i_d(int index, double value) {
  omega_d2i_d_.Set(index, value);
  // @@protoc_insertion_point(field_set:TelemetryMessage.omega_d2i_D)
}
inline void TelemetryMessage::_internal_add_omega_d2i_d(double value) {
  omega_d2i_d_.Add(value);
}
inline void TelemetryMessage::add_omega_d2i_d(double value) {
  _internal_add_omega_d2i_d(value);
  // @@protoc_insertion_point(field_add:TelemetryMessage.omega_d2i_D)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TelemetryMessage::_internal_omega_d2i_d() const {
  return omega_d2i_d_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TelemetryMessage::omega_d2i_d() const {
  // @@protoc_insertion_point(field_list:TelemetryMessage.omega_d2i_D)
  return _internal_omega_d2i_d();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TelemetryMessage::_internal_mutable_omega_d2i_d() {
  return &omega_d2i_d_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TelemetryMessage::mutable_omega_d2i_d() {
  // @@protoc_insertion_point(field_mutable_list:TelemetryMessage.omega_d2i_D)
  return _internal_mutable_omega_d2i_d();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_telemetry_2eproto
